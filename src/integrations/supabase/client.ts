// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL as string;
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY as string;

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Check if we have valid Supabase configuration
const hasValidSupabaseConfig = SUPABASE_URL && 
  SUPABASE_PUBLISHABLE_KEY && 
  SUPABASE_URL !== 'your_supabase_project_url_here' &&
  SUPABASE_PUBLISHABLE_KEY !== 'your_supabase_anon_key_here' &&
  SUPABASE_URL.startsWith('http');

// Create mock client for development when Supabase is not configured
const mockSupabaseClient = {
  auth: {
    signUp: () => Promise.resolve({ data: null, error: { message: 'Supabase not configured' } }),
    signInWithPassword: () => Promise.resolve({ data: null, error: { message: 'Supabase not configured' } }),
    signOut: () => Promise.resolve({ error: null }),
    getUser: () => Promise.resolve({ data: { user: null }, error: null }),
    getSession: () => Promise.resolve({ data: { session: null }, error: null }),
    onAuthStateChange: () => ({ data: { subscription: { unsubscribe: () => {} } } }),
  },
  from: () => ({
    select: () => Promise.resolve({ data: [], error: null }),
    insert: () => Promise.resolve({ data: null, error: { message: 'Supabase not configured' } }),
    update: () => Promise.resolve({ data: null, error: { message: 'Supabase not configured' } }),
    delete: () => Promise.resolve({ data: null, error: { message: 'Supabase not configured' } }),
  }),
} as any;

// Export the appropriate client based on configuration
export const supabase = hasValidSupabaseConfig 
  ? createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
      auth: {
        storage: localStorage,
        persistSession: true,
        autoRefreshToken: true,
      }
    })
  : (() => {
      console.warn('⚠️  Supabase not configured properly. Using mock client for development.');
      console.warn('   To fix: Update VITE_SUPABASE_URL and VITE_SUPABASE_ANON_KEY in your .env file');
      return mockSupabaseClient;
    })();